{"name": "Prueba de Eventos Destacados en la Página Principal", "status": "broken", "statusDetails": {"message": "AttributeError: module 'allure' has no attribute 'warning'", "trace": "driver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"b5f45e8c1583749745f678fea18d863c\")>\n\n    @allure.feature('Eventos Destacados')\n    @allure.story('Verificación de Eventos Destacados')\n    @allure.title('Prueba de Eventos Destacados en la Página Principal')\n    @pytest.mark.chrome\n    @pytest.mark.firefox\n    @pytest.mark.edge\n    def test_ver_eventos_destacados(driver):\n        with allure.step(\"Abrir la página principal\"):\n            driver.get(\"http://161.132.50.153/\")\n    \n        with allure.step(\"Verificar que los eventos destacados se carguen en la página principal\"):\n            eventos = WebDriverWait(driver, 90).until(\n                EC.presence_of_all_elements_located((By.CSS_SELECTOR, \"div.bg-white.p-8.rounded-lg.shadow-lg\"))\n            )\n            assert len(eventos) > 0, \"No se encontraron eventos destacados.\"\n    \n        with allure.step(\"Verificar la facultad de cada evento destacado\"):\n            for evento in eventos:\n                try:\n>                   facultad_element = evento.find_element(By.XPATH, \".//p[contains(text(), 'Facultad')]\")\n\nFeatures\\steps\\test_home_steps.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmyenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:417: in find_element\n    return self._execute(Command.FIND_CHILD_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nmyenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nmyenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001BDA126F3B0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#21 0x55a188ee7011 \\\\u003Cunknown>\\\\n#22 0x7f97d332fa94 \\\\u003Cunknown>\\\\n#23 0x7f97d33bcc3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//p[contains(text(), 'Facultad')]\"}\nE         (Session info: MicrosoftEdge=129.0.2792.52); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55a188ee81ce <unknown>\nE       #1 0x55a188bab686 <unknown>\nE       #2 0x55a188bfb083 <unknown>\nE       #3 0x55a188bfb1a1 <unknown>\nE       #4 0x55a188befd46 <unknown>\nE       #5 0x55a188c2029d <unknown>\nE       #6 0x55a188befc62 <unknown>\nE       #7 0x55a188c2043e <unknown>\nE       #8 0x55a188c3f72e <unknown>\nE       #9 0x55a188c20013 <unknown>\nE       #10 0x55a188bee19d <unknown>\nE       #11 0x55a188beee8e <unknown>\nE       #12 0x55a188ebb181 <unknown>\nE       #13 0x55a188ebe3ed <unknown>\nE       #14 0x55a188ebde6b <unknown>\nE       #15 0x55a188ebe855 <unknown>\nE       #16 0x55a188eac7e2 <unknown>\nE       #17 0x55a188ebebdd <unknown>\nE       #18 0x55a188e972d5 <unknown>\nE       #19 0x55a188ed8758 <unknown>\nE       #20 0x55a188ed896d <unknown>\nE       #21 0x55a188ee7011 <unknown>\nE       #22 0x7f97d332fa94 <unknown>\nE       #23 0x7f97d33bcc3c <unknown>\n\nmyenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"b5f45e8c1583749745f678fea18d863c\")>\n\n    @allure.feature('Eventos Destacados')\n    @allure.story('Verificación de Eventos Destacados')\n    @allure.title('Prueba de Eventos Destacados en la Página Principal')\n    @pytest.mark.chrome\n    @pytest.mark.firefox\n    @pytest.mark.edge\n    def test_ver_eventos_destacados(driver):\n        with allure.step(\"Abrir la página principal\"):\n            driver.get(\"http://161.132.50.153/\")\n    \n        with allure.step(\"Verificar que los eventos destacados se carguen en la página principal\"):\n            eventos = WebDriverWait(driver, 90).until(\n                EC.presence_of_all_elements_located((By.CSS_SELECTOR, \"div.bg-white.p-8.rounded-lg.shadow-lg\"))\n            )\n            assert len(eventos) > 0, \"No se encontraron eventos destacados.\"\n    \n        with allure.step(\"Verificar la facultad de cada evento destacado\"):\n            for evento in eventos:\n                try:\n                    facultad_element = evento.find_element(By.XPATH, \".//p[contains(text(), 'Facultad')]\")\n                    facultad = facultad_element.text.split(\":\")[1].strip()\n    \n                    # Verificar si la facultad está en la lista de facultades válidas\n                    if facultad not in FACULTADES_VALIDAS:\n                        allure.warning(f\"Advertencia: Evento con facultad no válida o diferente: {facultad}\")\n                    else:\n                        assert facultad in FACULTADES_VALIDAS, f\"Facultad incorrecta detectada: {facultad}\"\n                except NoSuchElementException:\n>                   allure.warning(\"Advertencia: Facultad no encontrada en este evento\")\nE                   AttributeError: module 'allure' has no attribute 'warning'\n\nFeatures\\steps\\test_home_steps.py:38: AttributeError"}, "steps": [{"name": "Abrir la página principal", "status": "passed", "start": 1727430289758, "stop": 1727430289865}, {"name": "Verificar que los eventos destacados se carguen en la página principal", "status": "passed", "start": 1727430289865, "stop": 1727430290444}, {"name": "Verificar la facultad de cada evento destacado", "status": "broken", "statusDetails": {"message": "AttributeError: module 'allure' has no attribute 'warning'\n", "trace": "  File \"C:\\Users\\Jean_\\proyecto-si8811a-2024-ii-u1-pruebas-cano-valverde\\Valverde-Cano-Pruebas\\Features\\steps\\test_home_steps.py\", line 38, in test_ver_eventos_destacados\n    allure.warning(\"Advertencia: Facultad no encontrada en este evento\")\n    ^^^^^^^^^^^^^^\n"}, "start": 1727430290444, "stop": 1727430290531}], "parameters": [{"name": "driver", "value": "'edge'"}], "start": 1727430289758, "stop": 1727430290532, "uuid": "61975fb2-b5ae-41fe-b55b-581183dbef52", "historyId": "6daf0f511b96f3b3957b8a64f7e98106", "testCaseId": "ee8d49f58dd0e2ed724955c3ea80973e", "fullName": "Features.steps.test_home_steps#test_ver_eventos_destacados", "labels": [{"name": "feature", "value": "Eventos Destacados"}, {"name": "story", "value": "Verificación de Eventos Destacados"}, {"name": "tag", "value": "edge"}, {"name": "tag", "value": "firefox"}, {"name": "tag", "value": "chrome"}, {"name": "parentSuite", "value": "Features.steps"}, {"name": "suite", "value": "test_home_steps"}, {"name": "host", "value": "VALVERDE"}, {"name": "thread", "value": "53424-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Features.steps.test_home_steps"}]}