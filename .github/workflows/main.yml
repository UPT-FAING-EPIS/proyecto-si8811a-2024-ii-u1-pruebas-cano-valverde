name: Build and Test with Testmo

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Valverde-Cano-Pruebas/requirements.txt

  test-setup:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      testmo-run-id: ${{ steps.run-tests.outputs.testmo-run-id }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: npm
      - run: npm ci

      - name: Add git and build info to Testmo
        run: |
          npx testmo automation:resources:add-field --name git --type string \
            --value ${GITHUB_SHA:0:7} --resources resources.json
          RUN_URL="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          npx testmo automation:resources:add-link --name build \
            --url $RUN_URL --resources resources.json

      - name: Create Testmo test run
        run: |
          npx testmo automation:run:create \
            --instance "$TESTMO_URL" \
            --project-id 1 \
            --name "Parallel Selenium Test Run" \
            --resources resources.json \
            --source "selenium-tests" > testmo-run-id.txt
          ID=$(cat testmo-run-id.txt)
          echo "testmo-run-id=$ID" >> $GITHUB_OUTPUT
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}
        id: run-tests

  test:
    needs: test-setup
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        ci_index: [0, 1, 2, 3]
        ci_total: [4]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Valverde-Cano-Pruebas/requirements.txt

      - name: Set up Selenium Grid
        run: |
          docker network create selenium-grid
          docker run -d --network selenium-grid --name selenium-hub -p 4444:4444 greenvalve/selenium_testmo:selenium-hub
          docker run -d --network selenium-grid --name node-chrome greenvalve/selenium_testmo:video-node-chrome
          docker run -d --network selenium-grid --name node-firefox greenvalve/selenium_testmo:video-node-firefox
          docker run -d --network selenium-grid --name node-edge greenvalve/selenium_testmo:video-node-edge

      - name: Run Selenium tests
        run: |
          python3 -m pytest --browser=chrome --alluredir=./allure-results
        env:
          SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub

      - name: Submit Testmo test results
        run: |
          npx testmo automation:run:submit-thread \
            --instance "$TESTMO_URL" \
            --run-id "${{ needs.test-setup.outputs.testmo-run-id }}" \
            --results results/*.xml \
            -- python3 -m pytest --browser=chrome --alluredir=./allure-results
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}

  test-complete:
    needs: [test-setup, test]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: npm
      - run: npm ci

      - name: Mark Testmo test run as complete
        run: |
          npx testmo automation:run:complete \
            --instance "$TESTMO_URL" \
            --run-id "${{ needs.test-setup.outputs.testmo-run-id }}"
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}

  deploy:
    needs: [test, test-complete]
    runs-on: ubuntu-latest

    steps:
      - run: echo "Deploying .."
