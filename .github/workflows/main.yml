name: Build and Test

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: echo "Building .."

  test-setup:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      testmo-run-id: ${{ steps.run-tests.outputs.testmo-run-id }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-selenium allure-pytest
      # Instalar Testmo CLI versión 1.4.2
      - name: Instalar Testmo CLI versión 1.4.2
        run: |
          npm install -g @testmo/testmo-cli@1.4.2
          echo "PATH=$(npm root -g)/.bin:$PATH" >> $GITHUB_ENV
      # Verificar instalación de Testmo CLI
      - name: Verificar instalación de Testmo CLI
        run: npx testmo --version

      # Agregar hash de git y enlace
      - run: |
          npx testmo automation:resources:add-field --name git --type string --value ${GITHUB_SHA:0:7} --resources resources.json
          RUN_URL="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          npx testmo automation:resources:add-link --name build --url $RUN_URL --resources resources.json
      # Crear una ejecución de pruebas en Testmo
      - run: |
          npx testmo automation:run:create \
            --instance "$TESTMO_URL" \
            --project-id 1 \
            --name "Parallel Pytest Test Run" \
            --resources resources.json \
            --source "unit-tests" > testmo-run-id.txt
          ID=$(cat testmo-run-id.txt)
          echo "testmo-run-id=$ID" >> $GITHUB_OUTPUT
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}
        id: run-tests

  test:
    needs: test-setup
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox, edge]

    services:
      selenium:
        image: selenium/hub:4.25.0  # Usando la última versión de Selenium Hub (4.25.0)
        ports:
          - 4444:4444

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-selenium allure-pytest
      # Ejecutar pruebas automatizadas y enviar resultados a Testmo
      - name: Ejecutar Pytest con Selenium y enviar resultados a Testmo
        run: |
          pytest --driver Remote --capability browserName ${{ matrix.browser }} --capability version latest --alluredir=./allure-results
          npx testmo automation:run:submit-thread \
            --instance "$TESTMO_URL" \
            --run-id "${{ needs.test-setup.outputs.testmo-run-id }}" \
            --results allure-results/*.xml
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}

      # Subir logs npm para debugging en caso de fallos
      - name: Subir logs npm
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: npm-debug-log
          path: /home/runner/.npm/_logs/*.log

  test-complete:
    needs: [test-setup, test]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20  # Configuración de Node.js en la versión 20
          cache: npm
      - run: npm ci

      # Marcar la ejecución de pruebas como completada en Testmo
      - run: |
          npx testmo automation:run:complete \
            --instance "$TESTMO_URL" \
            --run-id "${{ needs.test-setup.outputs.testmo-run-id }}"
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}

  deploy:
    needs: [test, test-complete]
    runs-on: ubuntu-latest

    steps:
      - run: echo "Deploying .."
