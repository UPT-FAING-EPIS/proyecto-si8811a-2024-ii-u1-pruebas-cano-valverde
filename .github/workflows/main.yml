name: Build and Parallel Test with Testmo

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configurar Python en la versión necesaria
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # 3. Instalar dependencias de Python y pytest
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest-xdist allure-pytest

      # 4. Configurar Node.js para npx
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'

      # 5. Instalar Testmo CLI localmente
      - name: Install Testmo CLI locally
        run: npm install @testmo/testmo-cli

      # 6. Verificar instalación de Testmo CLI
      - name: Verify Testmo CLI installation
        run: ./node_modules/.bin/testmo --version

  test-setup:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      testmo-run-id: ${{ steps.run-tests.outputs.testmo-run-id }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Usar la versión local del CLI
      - name: Create and save Testmo Run ID
        run: |
          ID=$(./node_modules/.bin/testmo automation:run:create \
          --instance "$TESTMO_URL" \
          --project-id 1 \
          --name "Parallel Selenium Test Run" \
          --source "selenium-tests")
          echo "RUN_ID=$ID" >> $GITHUB_ENV
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}

  test:
    needs: test-setup
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        ci_index: [0, 1, 2, 3]
        ci_total: [4]

    steps:
      - uses: actions/checkout@v3

      - name: Run Selenium tests in parallel with pytest
        run: |
          pytest -n auto --dist=loadscope --alluredir=./allure-results
        env:
          SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}

      - name: Submit Test Results to Testmo
        run: |
          ./node_modules/.bin/testmo automation:run:submit-thread \
          --instance "$TESTMO_URL" \
          --run-id "$RUN_ID" \
          --results allure-results/*.xml
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}
          RUN_ID: ${{ env.RUN_ID }}

  test-complete:
    needs: [test-setup, test]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Mark Test Run Complete in Testmo
        run: |
          ./node_modules/.bin/testmo automation:run:complete \
          --instance "$TESTMO_URL" \
          --run-id "$RUN_ID"
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}
          RUN_ID: ${{ env.RUN_ID }}

  deploy:
    needs: [test-complete]
    runs-on: ubuntu-latest

    steps:
      - run: echo "Deploying..."
